buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath group: 'net.researchgate', name: 'gradle-release', version: '2.6.0'
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.4.0'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
        classpath 'com.github.jengelman.gradle.plugins:shadow:4.0.3'
    }
}


apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'java'
apply plugin: 'application'

group = "org.grobid"

description = """TBA"""

sourceCompatibility = 1.8
targetCompatibility = 1.8

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    maven { url "https://dl.bintray.com/rookies/maven" }
}

ext {
    // treating them separately, these jars will be flattened into grobid-core.jar on installing,
    // to avoid missing dependencies from the projects that include grobid-core (see 'jar' taskin grobid-core)
    localLibs = []
}


dependencies {
    //Tests
    testCompile 'junit:junit:4.12'
    testCompile 'org.easymock:easymock:3.4'
    testCompile 'org.hamcrest:hamcrest-all:1.3'

    //GROBID
    compile 'org.grobid:grobid-core:0.5.5'
    compile 'org.grobid:grobid-trainer:0.5.5'
    
    compile('org.grobid:grobid-quantities:0.5.2-SNAPSHOT') {
        transitive = false
    }

    // grobid-quantities specific dependencies
    compile group: 'si.uom', name: 'si-units-java8', version: '0.9'
    compile group: 'si.uom', name: 'si-quantity', version: '0.9'
    compile group: 'tec.uom', name: 'uom-se', version: '1.0.9'
    compile group: 'systems.uom', name: 'systems-ucum-java8', version: '0.9'
    compile group: 'systems.uom', name: 'systems-unicode-java8', version: '0.9'
    compile group: 'systems.uom', name: 'systems-quantity', version: '0.9'
    compile group: 'systems.uom', name: 'systems-common', version: '0.9'
    compile group: 'com.googlecode.clearnlp', name: 'clearnlp', version: '1.3.1'

    //Apache commons
    compile 'org.apache.commons:commons-collections4:4.1'
    compile 'org.apache.commons:commons-lang3:3.6'
    compile 'commons-logging:commons-logging:1.2'
    compile 'commons-io:commons-io:2.5'
    compile 'commons-pool:commons-pool:1.6'

    //Dropwizard
    compile "io.dropwizard:dropwizard-core:1.3.9"
    compile "io.dropwizard:dropwizard-assets:1.3.9"
    compile "com.hubspot.dropwizard:dropwizard-guicier:1.3.5.0"
    compile "io.dropwizard:dropwizard-testing:1.3.9"
    compile "io.dropwizard:dropwizard-forms:1.3.9"
    compile "io.dropwizard:dropwizard-client:1.3.9"
    compile "io.dropwizard:dropwizard-auth:1.3.9"
    compile "io.dropwizard.metrics:metrics-core:4.0.0"
    compile "io.dropwizard.metrics:metrics-servlets:4.0.0"

    //Misc
    compile group: 'com.google.guava', name: 'guava', version: '27.1-jre'
    compile group: 'org.apache.httpcomponents', name: 'httpmime', version: '4.5.3'


    compile 'org.dkpro.statistics:dkpro-statistics:2.1.0'
    compile 'org.dkpro.statistics:dkpro-statistics-agreement:2.1.0'

    compile 'edu.emory.mathcs.nlp:nlp4j-api:1.1.3'
    compile 'edu.emory.mathcs.nlp:nlp4j-english:1.1.3'

    // XML
    implementation 'org.codehaus.woodstox:stax2-api:3.1.4'
    implementation 'com.fasterxml.woodstox:woodstox-core:5.1.0'
}


configurations {
    compile.exclude group: "org.slf4j", module: "slf4j-jdk14"
    compile.exclude group: 'org.slf4j', module: "slf4j-log4j12"
    compile.exclude group: 'log4j', module: "log4j"
//    compile.exclude group: 'org.glassfish.jersey.core', module: 'jersey-media-multipart'
//    compile.exclude group: 'org.glassfish.jersey.inject', module: 'jersey-hk2'
//    compile.exclude group: 'org.glassfish.jersey.containers', module: 'jersey-container-grizzly2-servlet'
//    compile.exclude group: 'org.glassfish.jersey.containers', module: 'jersey-container-servlet-core'
}

configurations.all {
    resolutionStrategy {
        force 'xml-apis:xml-apis:1.4.01'
    }
}

sourceSets.main.resources {
    srcDirs = ["src/main/resources", "resources"]
}


test {
    exclude '**/**IntegrationTest**'
}


// Training configuration

def trainerTasks = [
        //Training models
        "train_superconductors": "org.grobid.trainer.SuperconductorsTrainer",
        "train_abbreviations": "org.grobid.trainer.AbbreviationsTrainer"
]

trainerTasks.each { taskName, mainClassName ->
    tasks.create(name: taskName, type: JavaExec, group: 'training') {
        main = mainClassName
        classpath = sourceSets.main.runtimeClasspath
    }
}

// return the default value if the property has not been specified in command line
ext.getArg = { propName, defaultVal ->
    return project.hasProperty(propName) ? project.getProperty(propName) : defaultVal;
}

tasks.run.workingDir = rootProject.rootDir


/*** Packaging and distribution ***/

import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

task mainJar(type: ShadowJar, group: 'onejar') {
    zip64 true
    from sourceSets.main.output
    mergeServiceFiles()
    from {
        project.configurations.compile.collect {
            it.isDirectory() ? [] : localLibs.contains(it.getName()) ? zipTree(it) : []
        }
    }
}

shadowJar {
    mainClassName = 'org.grobid.service.GrobidSuperconductorsApplication'
    classifier = 'onejar'
    mergeServiceFiles()
    zip64 true
    manifest {
        attributes 'Main-Class': mainClassName
    }
//    from sourceSets.main.output
//    configurations = [project.configurations.compile, project.configurations.runtime]
}

jar {
    dependsOn mainJar
    enabled false
}

artifacts {
//    archives shadowJar
    archives mainJar
}

distZip.classifier = 'application'
distTar.classifier = 'application'

task copyModels(type: Copy) {
    from "${rootDir}/resources/models"
    include "**/*.wapiti"
    into "${rootDir}/../grobid-home/models/"
}

//tasks.withType(JavaCompile) {
//    options.compilerArgs << "-Xlint:deprecation"
//    options.compilerArgs << "-Xlint:unchecked"
//}


wrapper {
    gradleVersion "5.4.1"
}



