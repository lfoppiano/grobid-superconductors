name: Build release

on:
  push:
    branches: 
      - main
      - master
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    
concurrency:
  group: docker
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK 1
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - name: Build with Gradle
        run: ./gradlew build -x test

      - name: Test with Gradle Jacoco and Coveralls
        run: ./gradlew test jacocoTestReport coveralls --no-daemon
  
  docker-build:
    runs-on: ubuntu-latest

    steps:
      - name: Set tags
        id: set_tags
        run: |
          DOCKER_IMAGE=lfoppiano/grobid-superconductors
          VERSION=""
          if [[ $GITHUB_REF == refs/tags/v* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          fi
          if [[ $VERSION =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
            TAGS="${DOCKER_IMAGE}:${VERSION},${DOCKER_IMAGE}:latest"
          else
            TAGS="${DOCKER_IMAGE}_unstable:${GITHUB_SHA},${DOCKER_IMAGE}_unstable:latest"
          fi
          echo "TAGS=${TAGS}"
          echo ::set-output name=tags::${TAGS}
      - uses: actions/checkout@v2
      - name: set up proxy http 
        run: echo -e "systemProp.http.proxyHost=wwwout.nims.go.jp\nsystemProp.http.proxyPort=8888\nsystemProp.http.nonProxyHosts=*.nims.go.jp,localhost\n\nsystemProp.https.proxyHost=wwwout.nims.go.jp\nsystemProp.https.proxyPort=8888\nsystemProp.https.nonProxyHosts=*.nims.go.jp,localhost" >> gradle.properties
#     - name: Build the Docker image
#       run: docker build . --file Dockerfile --tag lfoppiano/grobid-superconductors:latest
      - name: Login to DockerHub
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
        if: ${{ env.DOCKERHUB_USERNAME != '' }}
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.set_tags.outputs.tags }}
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}  
